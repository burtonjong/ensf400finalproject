version: "3"
services:
  gradle-app:
    build:
      context: .
      dockerfile: Dockerfile.app
    image: burtonjong/ensf400fp:latest
    ports:
      - "8081:8080"
    container_name: gradle-app
    working_dir: /app
    command:
      [
        "./gradlew",
        "appRun",
        "--no-daemon",
      ]
  jenkins:
    build:
      context: .
      dockerfile: Dockerfile.jenkins
    privileged: true
    user: root
    ports:
      - 8082:8080
      - 50000:50000
    container_name: jenkins
    volumes:
      - /workspaces/ensf400-lab9-jenkins/jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - JAVA_OPTS="-Dlog4j2.disableJmx=true -Dlog4j.shutdownHookEnabled=false"

  sonarqube:
    image: sonarqube:9.9.0-community
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_temp:/opt/sonarqube/temp
    networks:
      - sonarqube
    ports:
      - "9000:9000"
  db:
    image: postgres:12.14
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - sonarqube

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_temp:
  postgresql:
  postgresql_data:

networks:
  sonarqube: